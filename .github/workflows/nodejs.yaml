name: Node.js CI/CD

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"
      - run: npm install

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    env:
      DOCKER_IMAGE_TAG: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
      CONTAINER_NAME: ${{ github.ref == 'refs/heads/main' && 'parken_app' || 'parken_app-dev' }}
      SSH_USERNAME: christian
      PRIVATE_SSH_KEY: ${{ secrets.PRIVATE_SSH_KEY }}
      TAILSCALE_AUTH_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Tailscale
        uses: tailscale/github-action@ce41a99162202a647a4b24c30c558a567b926709
        with:
          authkey: ${{ env.TAILSCALE_AUTH_KEY }}

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "$PRIVATE_SSH_KEY" > ~/.ssh/private_ssh_key
          chmod 600 ~/.ssh/private_ssh_key
          

      - name: Build and Deploy
        run: |
          docker build -t parken_app:$DOCKER_IMAGE_TAG .
          docker save -o parken_app.tar parken_app:$DOCKER_IMAGE_TAG
          SERVER_IP="${{ github.ref == 'refs/heads/main' && '100.95.230.59' || '100.122.109.36' }}"
          echo "$SSH_USERNAME@$SERVER_IP"
          ssh-keyscan $SERVER_IP >> ~/.ssh/known_hosts
          scp -v -i ~/.ssh/private_ssh_key parken_app.tar "$SSH_USERNAME@$SERVER_IP:/tmp/"
          ssh -v -i ~/.ssh/private_ssh_key "$SSH_USERNAME@$SERVER_IP" "docker load -i /tmp/parken_app.tar && docker stop $CONTAINER_NAME || true && docker rm $CONTAINER_NAME || true && docker run -d --name $CONTAINER_NAME -p 3001:3001 parken_app:$DOCKER_IMAGE_TAG"
